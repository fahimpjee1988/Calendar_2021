{"version":3,"sources":["Calendar/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Calendar","props","state","dateContext","moment","today","showMonthPopup","showYearPopup","selectedDay","weekdays","weekdaysShort","months","year","format","month","daysInMonth","currentDate","console","log","get","currentDay","firstDayOfMonth","startOf","setMonth","monthNo","indexOf","Object","assign","set","setState","nextMonth","add","onNextMonth","prevMonth","subtract","onPrevMonth","onSelectChange","e","data","onMonthChange","SelectList","popup","map","href","onClick","className","onChangeMonth","MonthNav","showYearEditor","showYearNav","setYear","onYearChange","target","value","onKeyUpYear","which","YearNav","defaultValue","ref","yearInput","onKeyUp","onChange","type","placeholder","onDoubleClick","onDayClick","day","width","style","this","blanks","i","push","d","selectedClass","totalSlots","rows","cells","forEach","row","insertRow","slice","length","trElems","colSpan","React","Component","position","margin","App","alert","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.fac27838.chunk.js","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport \"./calendar.css\";\n\nexport default class Calendar extends React.Component {\n  state = {\n    dateContext: moment(),\n    today: moment(),\n    showMonthPopup: false,\n    showYearPopup: false,\n    selectedDay: null,\n  };\n\n  constructor(props) {\n    super(props);\n    this.width = props.width || \"350px\";\n    this.style = props.style || {};\n    this.style.width = this.width; // add this\n  }\n\n  weekdays = moment.weekdays(); //[\"Sunday\", \"Monday\", \"Tuesday\", \"Wednessday\", \"Thursday\", \"Friday\", \"Saturday\"]\n  weekdaysShort = moment.weekdaysShort(); // [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n  months = moment.months();\n\n  year = () => {\n    return this.state.dateContext.format(\"Y\");\n  };\n  month = () => {\n    return this.state.dateContext.format(\"MMMM\");\n  };\n  daysInMonth = () => {\n    return this.state.dateContext.daysInMonth();\n  };\n  currentDate = () => {\n    console.log(\"currentDate: \", this.state.dateContext.get(\"date\"));\n    return this.state.dateContext.get(\"date\");\n  };\n  currentDay = () => {\n    return this.state.dateContext.format(\"D\");\n  };\n\n  firstDayOfMonth = () => {\n    let dateContext = this.state.dateContext;\n    let firstDay = moment(dateContext).startOf(\"month\").format(\"d\"); // Day of week 0...1..5...6\n    return firstDay;\n  };\n\n  setMonth = (month) => {\n    let monthNo = this.months.indexOf(month);\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).set(\"month\", monthNo);\n    this.setState({\n      dateContext: dateContext,\n    });\n  };\n\n  nextMonth = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).add(1, \"month\");\n    this.setState({\n      dateContext: dateContext,\n    });\n    this.props.onNextMonth && this.props.onNextMonth();\n  };\n\n  prevMonth = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).subtract(1, \"month\");\n    this.setState({\n      dateContext: dateContext,\n    });\n    this.props.onPrevMonth && this.props.onPrevMonth();\n  };\n\n  onSelectChange = (e, data) => {\n    this.setMonth(data);\n    this.props.onMonthChange && this.props.onMonthChange();\n  };\n  SelectList = (props) => {\n    let popup = props.data.map((data) => {\n      return (\n        <div key={data}>\n          <a\n            href=\"#\"\n            onClick={(e) => {\n              this.onSelectChange(e, data);\n            }}\n          >\n            {data}\n          </a>\n        </div>\n      );\n    });\n\n    return <div className=\"month-popup\">{popup}</div>;\n  };\n\n  onChangeMonth = (e, month) => {\n    this.setState({\n      showMonthPopup: !this.state.showMonthPopup,\n    });\n  };\n\n  MonthNav = () => {\n    return (\n      <span\n        className=\"label-month\"\n        onClick={(e) => {\n          this.onChangeMonth(e, this.month());\n        }}\n      >\n        {this.month()}\n        {this.state.showMonthPopup && <this.SelectList data={this.months} />}\n      </span>\n    );\n  };\n\n  showYearEditor = () => {\n    this.setState({\n      showYearNav: true,\n    });\n  };\n\n  setYear = (year) => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).set(\"year\", year);\n    this.setState({\n      dateContext: dateContext,\n    });\n  };\n  onYearChange = (e) => {\n    this.setYear(e.target.value);\n    this.props.onYearChange && this.props.onYearChange(e, e.target.value);\n  };\n\n  onKeyUpYear = (e) => {\n    if (e.which === 13 || e.which === 27) {\n      this.setYear(e.target.value);\n      this.setState({\n        showYearNav: false,\n      });\n    }\n  };\n\n  YearNav = () => {\n    return this.state.showYearNav ? (\n      <input\n        defaultValue={this.year()}\n        className=\"editor-year\"\n        ref={(yearInput) => {\n          this.yearInput = yearInput;\n        }}\n        onKeyUp={(e) => this.onKeyUpYear(e)}\n        onChange={(e) => this.onYearChange(e)}\n        type=\"number\"\n        placeholder=\"year\"\n      />\n    ) : (\n      <span\n        className=\"label-year\"\n        onDoubleClick={(e) => {\n          this.showYearEditor();\n        }}\n      >\n        {this.year()}\n      </span>\n    );\n  };\n\n  onDayClick = (e, day) => {\n    this.setState(\n      {\n        selectedDay: day,\n      },\n      () => {\n        console.log(\"SELECTED DAY: \", this.state.selectedDay);\n      }\n    );\n\n    this.props.onDayClick && this.props.onDayClick(e, day);\n  };\n\n  render() {\n    // Map the weekdays i.e Sun, Mon, Tue etc as <td>\n    let weekdays = this.weekdaysShort.map((day) => {\n      return (\n        <td key={day} className=\"week-day\">\n          {day}\n        </td>\n      );\n    });\n\n    let blanks = [];\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push(\n        <td key={i * 80} className=\"emptySlot\">\n          {\"\"}\n        </td>\n      );\n    }\n\n    console.log(\"blanks: \", blanks);\n\n    let daysInMonth = [];\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let className = d == this.currentDay() ? \"day current-day\" : \"day\";\n      let selectedClass = d == this.state.selectedDay ? \" selected-day \" : \"\";\n      daysInMonth.push(\n        <td key={d} className={className + selectedClass}>\n          <span\n            onClick={(e) => {\n              this.onDayClick(e, d);\n            }}\n          >\n            {d}\n          </span>\n        </td>\n      );\n    }\n\n    console.log(\"days: \", daysInMonth);\n\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        let insertRow = cells.slice();\n        rows.push(insertRow);\n        cells = [];\n        cells.push(row);\n      }\n      if (i === totalSlots.length - 1) {\n        let insertRow = cells.slice();\n        rows.push(insertRow);\n      }\n    });\n\n    let trElems = rows.map((d, i) => {\n      return <tr key={i * 100}>{d}</tr>;\n    });\n\n    return (\n      <div className=\"calendar-container\" style={this.style}>\n        <table className=\"calendar\">\n          <thead>\n            <tr className=\"calendar-header\">\n              <td colSpan=\"5\">\n                <this.MonthNav /> <this.YearNav />\n              </td>\n              <td colSpan=\"2\" className=\"nav-month\">\n                <i\n                  className=\"prev fa fa-fw fa-chevron-left\"\n                  onClick={(e) => {\n                    this.prevMonth();\n                  }}\n                ></i>\n                <i\n                  className=\"prev fa fa-fw fa-chevron-right\"\n                  onClick={(e) => {\n                    this.nextMonth();\n                  }}\n                ></i>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>{weekdays}</tr>\n            {trElems}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport Calendar from \"./Calendar/\";\n\nconst style = {\n  position: \"relative\",\n  margin: \"50px auto\",\n};\n\nclass App extends Component {\n  onDayClick = (e, day) => {\n    alert(day);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Calendar\n          style={style}\n          width=\"302px\"\n          onDayClick={(e, day) => this.onDayClick(e, day)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}